


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     leds_rotate.s
    2 00000000         ; Author:       Kairat Satbekov
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 import           hw1
    6 00000000                 export           rotate_leds
    7 00000000         ;*******************************************************
                       ************************* 
    8 00000000         ; SRAM
    9 00000000         ;*******************************************************
                       ************************* 
   10 00000000                 AREA             SRAM, READWRITE
   11 00000000                 align
   12 00000000         
   13 00000000         ;*******************************************************
                       ************************* 
   14 00000000         ; Constant Variables (FLASH) Segment
   15 00000000         ;*******************************************************
                       ************************* 
   16 00000000                 AREA             FLASH, CODE, READONLY
   17 00000000                 align
   18 00000000         
   19 00000000         ;*******************************************************
                       ************************* 
   20 00000000         ; Rotates the 24-bit color values of one LED to the next
                        LED by rotating 3-bytes
   21 00000000         ;
   22 00000000         ; parameter 0 address of LED array
   23 00000000         ; parameter 1   array size
   24 00000000         ;
   25 00000000         ;*******************************************************
                       *************************
   26 00000000         rotate_leds
                               PROC
   27 00000000         
   28 00000000 E92D 07F0       PUSH             {R4-R10}
   29 00000004         
   30 00000004 7802            LDRB             R2, [R0]    ; save led_array[0]
                                                             value to R2
   31 00000006 7843            LDRB             R3, [R0,#1] ; save led_array[1]
                                                             value to R3
   32 00000008 7884            LDRB             R4, [R0,#2] ; save led_array[2]
                                                             value to R4
   33 0000000A 4681            MOV              R9, R0      ; save source index
                                                             iterator to R9
   34 0000000C F109 0903       ADD              R9, R9, #3  ; set it to point t
                                                            o led_array[3]
   35 00000010 4682            MOV              R10, R0     ; save destination 
                                                            index iterator to R
                                                            10
   36 00000012 EB01 0541       ADD              R5, R1, R1, LSL #1 ; R5 holds t
                                                            he size of the arra
                                                            y
   37 00000016 1EED            SUBS             R5, R5, #3  ; save end index to
                                                             R5
   38 00000018         
   39 00000018         rotate_loop_start
   40 00000018         
   41 00000018 D00D            BEQ              rotate_loop_end



ARM Macro Assembler    Page 2 


   42 0000001A         ; load led_array[i+3], led_array[i+4], led_array[i+5] fr
                       om source
   43 0000001A         ; to R6, R7, R8
   44 0000001A F819 6B01       LDRB             R6, [R9], #1
   45 0000001E F819 7B01       LDRB             R7, [R9], #1
   46 00000022 F819 8B01       LDRB             R8, [R9], #1
   47 00000026         ; store R6, R7, R8 to array[i], led_array[i+1], led_arra
                       y[i+2]
   48 00000026         ; to destination(assuming after done, i += 3)
   49 00000026 F80A 6B01       STRB             R6, [R10], #1
   50 0000002A F80A 7B01       STRB             R7, [R10], #1
   51 0000002E F80A 8B01       STRB             R8, [R10], #1
   52 00000032 1EED            SUBS             R5, R5, #3
   53 00000034 E7F0            B                rotate_loop_start
   54 00000036         
   55 00000036         rotate_loop_end
   56 00000036 F1A9 0903       SUB              R9, R9, #3
   57 0000003A F809 2B01       STRB             R2, [R9], #1 ; led_array[21] = 
                                                            led_array[0]
   58 0000003E F809 3B01       STRB             R3, [R9], #1 ; led_array[22] = 
                                                            led_array[1]
   59 00000042 F809 4B01       STRB             R4, [R9], #1 ; led_array[23] = 
                                                            led_array[2]
   60 00000046 E8BD 07F0       POP              {R4-R10}
   61 0000004A 4770            BX               LR
   62 0000004C                 ENDP
   63 0000004C         
   64 0000004C         
   65 0000004C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\rotate_leds.d -o.\obj\rotate_leds.o -I.\RTE\_HW1 -IC:\Kei
l_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP
\1.1.0\Device\Include\TM4C123 --predefine="__MICROLIB SETA 1" --predefine="__UV
ISION_VERSION SETA 524" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SE
TA 1" --list=.\lst\rotate_leds.lst rotate_leds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SRAM 00000000

Symbol: SRAM
   Definitions
      At line 10 in file rotate_leds.s
   Uses
      None
Comment: SRAM unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 16 in file rotate_leds.s
   Uses
      None
Comment: FLASH unused
rotate_leds 00000000

Symbol: rotate_leds
   Definitions
      At line 26 in file rotate_leds.s
   Uses
      At line 6 in file rotate_leds.s
Comment: rotate_leds used once
rotate_loop_end 00000036

Symbol: rotate_loop_end
   Definitions
      At line 55 in file rotate_leds.s
   Uses
      At line 41 in file rotate_leds.s
Comment: rotate_loop_end used once
rotate_loop_start 00000018

Symbol: rotate_loop_start
   Definitions
      At line 39 in file rotate_leds.s
   Uses
      At line 53 in file rotate_leds.s
Comment: rotate_loop_start used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

hw1 00000000

Symbol: hw1
   Definitions
      At line 5 in file rotate_leds.s
   Uses
      None
Comment: hw1 unused
1 symbol
341 symbols in table
