


ARM Macro Assembler    Page 1 


    1 00000000         ; Filename:     main.s 
    2 00000000         ; Author:       ece353 staff 
    3 00000000         ; Description:  
    4 00000000         
    5 00000000                 export           __main
    6 00000000         
    7 00000000         ;**********************************************
    8 00000000         ; SRAM
    9 00000000         ;**********************************************
   10 00000000                 AREA             SRAM, READWRITE
   11 00000000                 align
   12 00000000         
   13 00000000         ;**********************************************
   14 00000000         ; Constant Variables (FLASH) Segment
   15 00000000         ;**********************************************
   16 00000000                 AREA             FLASH, CODE, READONLY
   17 00000000                 align
   18 00000000         
   19 00000000         ;**********************************************
   20 00000000         ; Code (FLASH) Segment
   21 00000000         ; main assembly program
   22 00000000         ;**********************************************
   23 00000000         __main  PROC
   24 00000000         
   25 00000000         ; DO NOT MODIFY ANTHING ABOVE THIS LINE!!! 
   26 00000000         
   27 00000000         
   28 00000000         ; CHECK POINT (1)
   29 00000000         ; Initialize R1 to be 20 (decimal)
   30 00000000 F04F 0114       MOV              R1, #20
   31 00000004         
   32 00000004         ; CHECK POINT (2)
   33 00000004         ; Add 15 to R1 using an immediate
   34 00000004 F101 010F       ADD              R1, R1, #15
   35 00000008         
   36 00000008         ; CHECK POINT (3)
   37 00000008         ; Multiply R1 by 3
   38 00000008 F04F 0203       MOV              R2, #3
   39 0000000C FB01 F102       MUL              R1, R1, R2
   40 00000010         
   41 00000010         ; CHECK POINT (4)
   42 00000010         ; Clear (set to 0) bits 4:0 of R1
   43 00000010         ; All other bits should not be affected
   44 00000010 F021 011F       BIC              R1, R1, #0x0000001F
   45 00000014         
   46 00000014         ; CHECK POINT (5)
   47 00000014         ; Set bits 31:25 and 21:16 of R1 to be a 1
   48 00000014         ; All other bits should not be affected
   49 00000014 F041 417E       ORR              R1, R1, #0xFE000000
   50 00000018 F441 117C       ORR              R1, R1, #0x003F0000
   51 0000001C         
   52 0000001C         ; CHECK POINT (6)
   53 0000001C         ; Invert ONLY bits 3-9 of R1
   54 0000001C F481 717E       EOR              R1, R1, #0x000003F8
   55 00000020         ; CHECK POINT (7) 
   56 00000020         ; Move the contents of R1 to R0
   57 00000020 4608            MOV              R0, R1
   58 00000022         ; CHECK POINT (8) 
   59 00000022         ; Total the bytes in R0 and place the results in R2



ARM Macro Assembler    Page 2 


   60 00000022         ; R2 = R0[31:24] + R0[23:16] + R0[15:8] + R0[7:0]
   61 00000022         ; Treat each byte an an unsigned 8-bit number
   62 00000022 F000 02FE       AND              R2, R0, #0xFE
   63 00000026 F400 417F       AND              R1, R0, #0xFF00
   64 0000002A EA4F 2111       LSR              R1, R1, #8
   65 0000002E 440A            ADD              R2, R2, R1
   66 00000030         
   67 00000030         ; CHECK POINT (9) 
   68 00000030         ; Initialize R4 to be decimal value 100
   69 00000030         ; Initialize R5 to be decimal value 110
   70 00000030         ; Without using the subtract instruction, subtract R5 fr
                       om R4
   71 00000030         ; and place the results in R6.  Use as many ARM assembly
                        
   72 00000030         ; instructions as needed.
   73 00000030 F04F 0464       MOV              R4, #100
   74 00000034 F04F 056E       MOV              R5, #110
   75 00000038         ; DO NOT MODIFY ANTHING BELOW THIS LINE!!!
   76 00000038         
   77 00000038         INFINITE_LOOP
   78 00000038 E7FE            B                INFINITE_LOOP
   79 0000003A                 ENDP
   80 0000003A 00 00           align
   81 0000003C         
   82 0000003C         
   83 0000003C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\ece353_main.d -o.\obj\ece353_main.o -I.\RTE\_Target_1 -IC
:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4
C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__MICROLIB SETA 1" --predefine=
"__UVISION_VERSION SETA 524" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6
PM SETA 1" --list=.\lst\ece353_main.lst ece353_main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SRAM 00000000

Symbol: SRAM
   Definitions
      At line 10 in file ece353_main.s
   Uses
      None
Comment: SRAM unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FLASH 00000000

Symbol: FLASH
   Definitions
      At line 16 in file ece353_main.s
   Uses
      None
Comment: FLASH unused
INFINITE_LOOP 00000038

Symbol: INFINITE_LOOP
   Definitions
      At line 77 in file ece353_main.s
   Uses
      At line 78 in file ece353_main.s
Comment: INFINITE_LOOP used once
__main 00000000

Symbol: __main
   Definitions
      At line 23 in file ece353_main.s
   Uses
      At line 5 in file ece353_main.s
Comment: __main used once
3 symbols
339 symbols in table
